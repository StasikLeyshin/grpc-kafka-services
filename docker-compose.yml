version: '3'

services:
  db:
    image: postgres:15.4
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: "servers"
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_pass"
      POSTGRES_HOST:
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - service

  zookeeper:
    container_name: zookeeper
    restart: always
    image: zookeeper:3.5.9
    ports:
      - "2181:2181"
    networks:
      - service

  kafka:
    container_name: kafka
    restart: always
    image: wurstmeister/kafka:2.13-2.8.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "example-topic:2:1"
    depends_on:
      - zookeeper
    networks:
      - service

  producer:
    container_name: producer
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    environment:
      CONFIG_PATH: "./configs/producer-service.yaml"
    volumes:
      - ./configs/producer-service.yaml:/app/producer-service.yaml
      - ./cmd/producer:/app/cmd/producer
    command: go run cmd/producer/main.go
    ports:
      - "8000:5000"
    depends_on:
      - kafka
    networks:
      - service

  consumer:
    container_name: consumer
    build:
      context: ./
      dockerfile: Dockerfile.consumer
    restart: always
    environment:
      CONFIG_PATH: "./configs/consumer-service.yaml"
    volumes:
      - ./configs/consumer-service.yaml:/app/consumer-service.yaml
      - ./cmd/consumer:/app/cmd/consumer
    command: go run cmd/consumer/main.go
    depends_on:
      - db
      - kafka
    networks:
      - service

networks:
  service: